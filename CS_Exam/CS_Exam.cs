/*

   В магазине стоят стенды с овощами. Каждый час приходят покупатели и становятся в очередь.
Покупатель подходит к одному или нескольким стендам и покупает некоторое количество овощей.
Каждый день часть овощей портится. Каждую неделю в магазин завозят свежие овощи.
Когда происходит новый завоз, сотрудники магазина пересматривают старые овощи, выбрасывают испорченные, вниз стенда кладут свежие, а сверху кладут старые но еще не испорченные овощи. Менеджер регулярно составляет отчет о деятельности магазина.

Детали:
   + 1. Овощи лежат стопкой - для реализации использовать Стек.
   + 2. Покупатели становятся в очередь - для реализации использовать очередь.
   + 3. У овоща есть 4 состояния: свежий, нормальный, гнилой, токсичный.
   + 4. Изменение состояние происходит случайным образом в худшую сторону.
   + 5. При завозе свежих овощей, стенд со старыми овощами сортируется на две стопки (Стека): Свежие и Нормальные. После того, как стенд с овощами опустеет и гнилые овощи будут выброшены, вниз стенда помещаются свежие завезенные овощи, сверху добавляются старые свежие овощи, а в самый верх кладутся старые нормальные овощи. После этого выводится на экран информация о том, сколько овощей было завезено и сколько старых овощей было испорчено.
   + 6. Для хранения стендов использовать словарь, ключом будет название овоща, значением - стек овощей.
   + 7. Для "старения" овощей использовать событие. Каждый завезенный овощ подписывается на это событие. Раз в день срабатывает событие и все овощи в магазине "стареют".
   + 8. Когда покупатель "покупает" овощи, он достает по одному овощу из стека.
   + 9. Если покупатель берет гнилой овощ, овощ выбрасывается.
   + 10. Если покупатель берет токсичный овощ, покупатель уходит не заплатив и "рейтинг" магазина падает.
   + 11. Чем ниже рейтинг магазина, тем меньше покупателей в него заходит.
   + 12. Со временем рейтинг магазина увеличивается.
   + 13. Предусмотреть сериализацию состояния магазина и еженедельных отчетов (кол-во посетителей, кол-во заработанных денег, кол-во выброшенных овощей, текущий рейтинг) в файл.

   14. Отчеты сериализовать в текстовом виде.

   + 15. Выводить состояние магазина в консоль.
   + 16. Для периодичных событий использовать System.Timers.Timer;
   + 17. Если покупатель приходит в магазин, а желаемых овощей нет - рейтинг магазина падает.
   + 18. С небольшой вероятностью завезенные овощи могут оказаться зараженными и их нужно выбросить.
   + 19. Чем больше магазин зарабатывает денег, тем больше товара он может закупить.
   + 20. Со временем магазин может расширить ассортимент новым видом овощей, увеличив таким образом свой рейтинг.
   + 21. Может начаться эпидемия - на несколько недель перестанут приходить покупатели.
   + 22. 1 час - 10 секунд реального времени.

*/

using System;
using System.Timers;

namespace CS_Exam
{
    [Serializable]
    public enum VegetableName { Cabbage, Turnip, Radish, Carrot, Parsnip, Beetroot, Lettuce, Beans, Peas, Potato, Eggplant, Tomato, Cucumber, Pumpkin, Onion, Garlic, Leek, Pepper }
    [Serializable]
    public enum VegetableState { Fresh, Normal, Rotten, Toxic }
    [Serializable]
    public enum StoreStatus { Open, Buy, Sorted, Epidem, Bankrupt }

    class CS_Exam
    {
        static void Main(string[] args)
        {
            Console.CursorVisible = false;
            Console.SetBufferSize(131,43);
            Console.Title = "| VegStore | Fuad Agazade";
            Console.SetWindowSize(131, 43);

            Store s = new Store();

            s.OpenStore();

            Console.Read();
        }
    }
}